!function(){var e={},n=this&&this.__awaiter||function(e,n,t,i){return new(t||(t=Promise))((function(o,s){function r(e){try{d(i.next(e))}catch(n){s(n)}}function a(e){try{d(i.throw(e))}catch(n){s(n)}}function d(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(r,a)}d((i=i.apply(e,n||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{getAccounts(){return n(this,void 0,void 0,(function*(){if(!(null===window||void 0===window?void 0:window.accounts))throw new Error("accounts not found");const{address:e,algo:n,pubkey:t}=null===window||void 0===window?void 0:window.accounts;return[{address:e,algo:n,pubkey:new Uint8Array(Object.keys(t).map(e=>t[e]))}]}))}signDirect(e,n){return console.log("signDoc",n),new Promise((t,i)=>{null===window||void 0===window||window.ReactNativeWebView.postMessage(JSON.stringify({method:"signRequest",params:{signerAddress:e,signDoc:n}})),window.addEventListener("message",e=>{try{const n=JSON.parse(e.data);console.log("DirectSignResponse",n);const i={signature:n.signature,signed:{chainId:n.signed.chainId,bodyBytes:new Uint8Array(Object.keys(n.signed.bodyBytes).map(e=>n.signed.bodyBytes[e])),authInfoBytes:new Uint8Array(Object.keys(n.signed.authInfoBytes).map(e=>n.signed.authInfoBytes[e])),accountNumber:n.signed.accountNumber}};return t(i)}catch(n){return i(n)}})})}};var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty({},"__esModule",{value:!0});const i=t(e);window.initiaWebView={getOfflineSigner:()=>new i.default}}();